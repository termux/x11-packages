Qt build on Termux doesn't have accessibility feature. It needs to be removed.
diff --color -uNr src/src/controls/LinkButton.qml src.mod/src/controls/LinkButton.qml
--- src/src/controls/LinkButton.qml	2020-06-07 19:29:04.000000000 +0100
+++ src.mod/src/controls/LinkButton.qml	2021-05-26 15:04:01.628823854 +0100
@@ -25,9 +25,6 @@
     property Action action: null
     property alias acceptedButtons: area.acceptedButtons
     property alias mouseArea: area
-    Accessible.role: Accessible.Button
-    Accessible.name: text
-    Accessible.onPressAction: control.clicked(null)
 
     text: action ? action.text : ""
     enabled: !action || action.enabled
diff --color -uNr src/src/controls/swipenavigator/PrivateSwipeHighlight.qml src.mod/src/controls/swipenavigator/PrivateSwipeHighlight.qml
--- src/src/controls/swipenavigator/PrivateSwipeHighlight.qml	2020-06-07 19:29:04.000000000 +0100
+++ src.mod/src/controls/swipenavigator/PrivateSwipeHighlight.qml	2021-05-26 15:04:22.268673726 +0100
@@ -10,8 +10,6 @@
 import org.kde.kirigami 2.12 as Kirigami
 
 Rectangle {
-    Accessible.ignored: true
-
     anchors {
         bottom: Kirigami.Settings.isMobile ? undefined : parent.bottom
         top: Kirigami.Settings.isMobile ? parent.top : undefined
@@ -30,4 +28,4 @@
 
     // Unlike most things, we don't want to scale with the em grid, so we don't use a Unit.
     height: 2
-}
\ No newline at end of file
+}
diff --color -uNr src/src/controls/swipenavigator/PrivateSwipeProgress.qml src.mod/src/controls/swipenavigator/PrivateSwipeProgress.qml
--- src/src/controls/swipenavigator/PrivateSwipeProgress.qml	2020-06-07 19:29:04.000000000 +0100
+++ src.mod/src/controls/swipenavigator/PrivateSwipeProgress.qml	2021-05-26 15:04:32.540599175 +0100
@@ -14,8 +14,6 @@
     property var progress
 
     Rectangle {
-        Accessible.ignored: true
-
         anchors {
             top: parent.top
             bottom: parent.bottom
@@ -41,8 +39,6 @@
 
 
     Rectangle {
-        Accessible.ignored: true
-
         anchors {
             top: parent.top
             bottom: parent.bottom
@@ -65,4 +61,4 @@
             height: 2
         }
     }
-}
\ No newline at end of file
+}
diff --color -uNr src/src/controls/swipenavigator/PrivateSwipeTab.qml src.mod/src/controls/swipenavigator/PrivateSwipeTab.qml
--- src/src/controls/swipenavigator/PrivateSwipeTab.qml	2020-06-07 19:29:04.000000000 +0100
+++ src.mod/src/controls/swipenavigator/PrivateSwipeTab.qml	2021-05-26 15:04:52.672453373 +0100
@@ -38,28 +38,6 @@
         }
     }
 
-    Accessible.name: modelData.title
-    Accessible.description: {
-        if (!!modelData.progress) {
-            if (index == columnView.currentIndex) {
-                return i18nc("Accessibility text for a page tab. Keep the text as concise as possible and don't use a percent sign.", "Current page. Progress: %1 percent.", Math.round(modelData.progress*100))
-            } else {
-                return i18nc("Accessibility text for a page tab. Keep the text as concise as possible.", "Navigate to %1. Progress: %1 percent.", modelData.title, Math.round(modelData.progress*100))
-            }
-        } else {
-            if (index == columnView.currentIndex) {
-                return i18nc("Accessibility text for a page tab. Keep the text as concise as possible.", "Current page.")
-            } else if (modelData.needsAttention) {
-                return i18nc("Accessibility text for a page tab that's requesting the user's attention. Keep the text as concise as possible.", "Navigate to %1. Demanding attention.", modelData.title)
-            } else {
-                return i18nc("Accessibility text for a page tab that's requesting the user's attention. Keep the text as concise as possible.", "Navigate to %1.", modelData.title)
-            }
-        }
-    }
-    Accessible.role: Accessible.PageTab
-    Accessible.focusable: true
-    Accessible.onPressAction: columnView.currentIndex = index
-
     implicitWidth: small ? smallTitleRow.implicitWidth : largeTitleRow.implicitWidth
     border {
         width: activeFocus ? 2 : 0
@@ -91,7 +69,6 @@
     RowLayout {
         id: smallTitleRow
         anchors.fill: parent
-        Accessible.ignored: true
         visible: small
 
         ColumnLayout {
@@ -120,7 +97,6 @@
     RowLayout {
         id: largeTitleRow
         anchors.fill: parent
-        Accessible.ignored: true
         visible: !small
 
         RowLayout {
@@ -149,7 +125,6 @@
     MouseArea {
         id: mouse
         anchors.fill: parent
-        Accessible.ignored: true
         onClicked: {
             columnView.currentIndex = index
         }
@@ -157,4 +132,4 @@
 
     Layout.fillHeight: true
     Layout.alignment: Qt.AlignHCenter
-}
\ No newline at end of file
+}
diff --color -uNr src/src/controls/swipenavigator/SwipeNavigator.qml src.mod/src/controls/swipenavigator/SwipeNavigator.qml
--- src/src/controls/swipenavigator/SwipeNavigator.qml	2020-06-07 19:29:04.000000000 +0100
+++ src.mod/src/controls/swipenavigator/SwipeNavigator.qml	2021-05-26 15:04:13.336738638 +0100
@@ -159,7 +159,6 @@
 
         Layout.fillWidth: true
 
-        Accessible.role: Accessible.PageTabList
     }
 
     StackView {
diff --color -uNr src/src/controls/templates/AbstractListItem.qml src.mod/src/controls/templates/AbstractListItem.qml
--- src/src/controls/templates/AbstractListItem.qml	2020-06-07 19:29:04.000000000 +0100
+++ src.mod/src/controls/templates/AbstractListItem.qml	2021-05-26 15:03:49.128915000 +0100
@@ -153,6 +153,5 @@
         property bool indicateActiveFocus: listItem.pressed || Settings.tabletMode || listItem.activeFocus || (view ? view.activeFocus : false)
     }
 
-    Accessible.role: Accessible.ListItem
     highlighted: focus && ListView.isCurrentItem && ListView.view && ListView.view.keyNavigationEnabled
 }
